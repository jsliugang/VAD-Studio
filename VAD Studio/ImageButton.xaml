<Button x:Class="VAD.ImageButton"
        x:Name="self"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
        xmlns:local="clr-namespace:VAD"
        xmlns:conv="clr-namespace:VAD.Converters"
        mc:Ignorable="d"
        d:DesignHeight="100" d:DesignWidth="100" Focusable="False"
        Stylus.IsTapFeedbackEnabled="False"
        Stylus.IsTouchFeedbackEnabled="False"
        Stylus.IsFlicksEnabled="False"
        Stylus.IsPressAndHoldEnabled="False" ClipToBounds="True">
    <Button.Resources>
        <conv:FlippedColumn0WidthValueConverter x:Key="column0Width"/>
        <conv:FlippedColumn1WidthValueConverter x:Key="column1Width"/>
        <conv:FlippedIconColumnValueConverter x:Key="iconColumn" />
        <conv:FlippedContentColumnValueConverter x:Key="contentColumn" />
        <conv:BorderClipConverter x:Key="clipConverter" />
        <conv:PropertiesToEffectValueConverter x:Key="effectFromProperties" />
    </Button.Resources>
    <Button.Effect>
        <MultiBinding Converter="{StaticResource effectFromProperties}">
            <Binding Path="IsPressed" />
            <Binding Path="IsChecked" />
            <Binding Path="IsEnabled" />

            <Binding Path="Effect" />
            <Binding Path="PressedEffect" />
            <Binding Path="CheckedEffect" />
            <Binding Path="DisabledEffect" />
        </MultiBinding>
    </Button.Effect>
    <Button.Style>
        <Style TargetType="{x:Type Button}">
            <!--<Setter Property="Stylus.IsPressAndHoldEnabled" Value="False" />
            <Setter Property="Stylus.IsFlicksEnabled" Value="False" />-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border 
                            Name="background"
                            Background="{Binding Background}"
                            CornerRadius="{Binding CornerRadius}"
                            BorderBrush="{Binding BorderBrush}"
                            BorderThickness="{Binding BorderThickness}">
                            <Border.Clip>
                                <MultiBinding Converter="{StaticResource clipConverter}">
                                    <Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}"/>
                                    <Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}"/>
                                    <Binding Path="CornerRadius" RelativeSource="{RelativeSource Self}"/>
                                </MultiBinding>
                            </Border.Clip>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Name="column0">
                                        <ColumnDefinition.Width>
                                            <MultiBinding Converter="{StaticResource column0Width}">
                                                <Binding Path="Flipped"/>
                                                <Binding Path="Icon"/>
                                                <Binding Path="Content"/>
                                            </MultiBinding>
                                        </ColumnDefinition.Width>
                                    </ColumnDefinition>
                                    <ColumnDefinition Name="column1">
                                        <ColumnDefinition.Width>
                                            <MultiBinding Converter="{StaticResource column1Width}">
                                                <Binding Path="Flipped"/>
                                                <Binding Path="Icon"/>
                                                <Binding Path="Content"/>
                                            </MultiBinding>
                                        </ColumnDefinition.Width>
                                    </ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <Image 
                                    Grid.Column="{Binding Flipped, Converter={StaticResource iconColumn}}"
                                    Name="icon"
                                    RenderOptions.BitmapScalingMode="Fant"
                                    Source="{Binding Icon}"
                                    Stretch="{Binding IconStretch}"
                                    HorizontalAlignment="{Binding HorizontalIconAlignment}"
                                    VerticalAlignment="{Binding VerticalIconAlignment}"
                                    MaxWidth="{Binding ActualWidth}"
                                    MaxHeight="{Binding ActualHeight}"
                                    Width="{Binding IconWidth}"
                                    Height="{Binding IconHeight}"
                                    Margin="{Binding IconMargin}"
                                    Effect="{Binding IconEffect}"/>
                                <ContentControl
                                    Grid.Column="{Binding Flipped, Converter={StaticResource contentColumn}}"
                                    Name="text"
                                    Content="{Binding Content}"
                                    Foreground="{Binding Foreground}"
                                    FontFamily="{Binding FontFamily}"
                                    FontSize="{Binding FontSize}"
                                    FontStretch="{Binding FontStretch}" 
                                    FontStyle="{Binding FontStyle}"
                                    FontWeight="{Binding FontWeight}"
                                    Background="Transparent"
                                    Margin="{Binding ContentMargin}"
                                    HorizontalAlignment="{Binding HorizontalContentAlignment}"
                                    VerticalAlignment="{Binding VerticalContentAlignment}"
                                    Effect="{Binding ContentEffect}"
                                    Width="{Binding ContentWidth}"/>
                            </Grid>
                        </Border>

                        <ControlTemplate.Triggers>
                            <MultiTrigger >
                                <MultiTrigger.Conditions>
                                    <Condition Property="local:ImageButton.Checkable" Value="True" />
                                    <Condition Property="local:ImageButton.IsChecked" Value="True" />
                                </MultiTrigger.Conditions>
                                <MultiTrigger.Setters>
                                    <Setter TargetName="background" Property="BorderThickness" Value="{Binding CheckedBorderThickness}" />
                                    <Setter TargetName="background" Property="BorderBrush" Value="{Binding CheckedBorderBrush}" />
                                    <Setter TargetName="background" Property="Background" Value="{Binding CheckedBackground}" />
                                    <Setter TargetName="background" Property="Effect" Value="{Binding CheckedEffect}"/>
                                    <Setter TargetName="icon" Property="Source" Value="{Binding CheckedIcon}"/>
                                    <Setter TargetName="icon" Property="Effect" Value="{Binding CheckedIconEffect}"/>
                                    <Setter TargetName="text" Property="Foreground" Value="{Binding CheckedForeground}"/>
                                    <Setter TargetName="text" Property="Effect" Value="{Binding CheckedContentEffect}"/>
                                </MultiTrigger.Setters>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="local:ImageButton.IsMouseOverInternal" Value="True" />
                                    <Condition Property="local:ImageButton.IsPressed" Value="False" />
                                </MultiTrigger.Conditions>
                                <MultiTrigger.Setters>
                                    <Setter TargetName="background" Property="BorderThickness" Value="{Binding MouseOverBorderThickness}"/>
                                    <Setter TargetName="background" Property="BorderBrush" Value="{Binding MouseOverBorderBrush}"/>
                                    <Setter TargetName="background" Property="Background" Value="{Binding MouseOverBackground}"/>
                                    <Setter TargetName="background" Property="Effect" Value="{Binding MouseOverEffect}"/>
                                    <Setter TargetName="icon" Property="Source" Value="{Binding MouseOverIcon}"/>
                                    <Setter TargetName="icon" Property="Effect" Value="{Binding MouseOverIconEffect}"/>
                                    <Setter TargetName="text" Property="Foreground" Value="{Binding MouseOverForeground}"/>
                                    <Setter TargetName="text" Property="Effect" Value="{Binding MouseOverContentEffect}"/>
                                </MultiTrigger.Setters>
                            </MultiTrigger>
                            <Trigger Property="local:ImageButton.IsPressedInternal" Value="True">
                                <Setter TargetName="background" Property="BorderThickness" Value="{Binding PressedBorderThickness}"/>
                                <Setter TargetName="background" Property="BorderBrush" Value="{Binding PressedBorderBrush}"/>
                                <Setter TargetName="background" Property="Background" Value="{Binding PressedBackground}"/>
                                <Setter TargetName="background" Property="Effect" Value="{Binding PressedEffect}"/>
                                <Setter TargetName="icon" Property="Source" Value="{Binding PressedIcon}"/>
                                <Setter TargetName="icon" Property="Effect" Value="{Binding PressedIconEffect}"/>
                                <Setter TargetName="text" Property="Foreground" Value="{Binding PressedForeground}"/>
                                <Setter TargetName="text" Property="Effect" Value="{Binding PressedContentEffect}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="background" Property="BorderThickness" Value="{Binding DisabledBorderThickness}"/>
                                <Setter TargetName="background" Property="BorderBrush" Value="{Binding DisabledBorderBrush}"/>
                                <Setter TargetName="background" Property="Background" Value="{Binding DisabledBackground}"/>
                                <Setter TargetName="background" Property="Effect" Value="{Binding DisabledEffect}"/>
                                <Setter TargetName="icon" Property="Source" Value="{Binding DisabledIcon}"/>
                                <Setter TargetName="icon" Property="Effect" Value="{Binding DisabledIconEffect}"/>
                                <Setter TargetName="text" Property="Foreground" Value="{Binding DisabledForeground}"/>
                                <Setter TargetName="text" Property="Effect" Value="{Binding DisabledContentEffect}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Button.Style>
</Button>
